FROM openjdk:18-jdk-alpine

RUN apk add --no-cache bash dumb-init

RUN mkdir -p /app
ADD java-run.sh /app
RUN chmod +x /app/java-run.sh

# Add our service
ADD target/*.jar /app/application.jar

ARG USERNAME=nonroot
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN addgroup --gid $USER_GID $USERNAME \
    && adduser --system --no-create-home --gecos "" --uid 1000 -S $USERNAME \
    && chown -R $USERNAME /app

USER $USERNAME
WORKDIR /app

# run application with this command line
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
#CMD ["bash", "-c", "do-some-pre-start-thing && exec my-server"]
# The 'exec' portion of the bash command is important because it replaces the bash process with your server, so that the shell only exists momentarily at start!
#CMD ["bash", "-c", "echo 'Using dumb-init as entrypoint then starting spring-boot...' && exec $JAVA_HOME/bin/java $JAVA_OPTIONS -jar /app/application.jar $@"]
CMD ["bash", "-c", "echo 'Using dumb-init as entrypoint and a shell script as a pre-start hook and then starting spring-boot...' && /app/java-run.sh"]